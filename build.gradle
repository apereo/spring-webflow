buildscript {
    repositories {
        maven { url "https://repo.spring.io/plugins-release" }
    }
}

plugins {
    id 'io.spring.dependency-management' version "${dependencyMgmtPluginVersion}" apply false
}

allprojects {
    apply plugin: "java"
    apply plugin: "maven-publish"
    apply plugin: "signing"
    apply plugin: "io.spring.dependency-management"

    dependencyManagement {
        imports {
            mavenBom "org.springframework:spring-framework-bom:${springVersion}"
            mavenBom "org.junit:junit-bom:${junitVersion}"
        }
        dependencies {
            dependency "jakarta.servlet:jakarta.servlet-api:${servletApiVersion}"
            dependency "jakarta.servlet.jsp:jakarta.servlet.jsp-api:${jspApiVersion}"
            dependency "jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:${jstlApiVersion}"
            dependency "jakarta.el:jakarta.el-api:${elApiVersion}"
            dependency "jakarta.validation:jakarta.validation-api:${validationApiVersion}"

            dependencySet(group: "org.apache.logging.log4j", version: "${log4jVersion}") {
                entry 'log4j-api'
                entry 'log4j-core'
                entry 'log4j-slf4j-impl'
                entry 'log4j-jul'
            }
            dependency "org.slf4j:slf4j-api:${slf4jVersion}"
            dependency "org.easymock:easymock:4.3"
            dependency "org.hamcrest:hamcrest:2.2"
            dependency "org.apache.tomcat:tomcat-jasper-el:${tomcatJasperVersion}"
            dependency "junit:junit:4.13.2"
        }
    }
    repositories {
        mavenCentral()
        maven {
            url "https://repo.spring.io/milestone"
        }
    }

    test {
        useJUnitPlatform()
        include(["**/*Tests.class", "**/*Test.class"])
        systemProperty("java.awt.headless", "true")
        systemProperty("testGroups", project.properties.get("testGroups"))
    }

    javadoc {
        options.memberLevel = JavadocMemberLevel.PROTECTED
        options.author = true
        options.header = project.name
        failOnError false
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
        options.addStringOption('charSet', 'UTF-8')
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        archiveClassifier.set("sources")
        from sourceSets.main.allJava
    }

    task javadocJar(type: Jar) {
        archiveClassifier.set("javadoc")
        from javadoc
    }

}

subprojects { subproject ->

    [compileJava, compileTestJava]*.options*.compilerArgs = ["-Xlint:none"]

    sourceSets.test.resources.srcDirs = ["src/main/java", "src/test/resources", "src/test/java"]

    jar {
        manifest.attributes["Implementation-Title"] = subproject.name
        manifest.attributes["Implementation-Version"] = subproject.version

        from("${rootProject.projectDir}/src/dist") {
            include "license.txt"
            include "notice.txt"
            into "META-INF"
            expand(copyright: new Date().format("yyyy"), version: project.version)
        }
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

    publishing {
        publications {
            "$project.name"(MavenPublication) {
                from components.java
                artifact tasks['sourcesJar']
                artifact tasks['javadocJar']

                groupId project.group
                artifactId project.name
                version project.version

                pom {
                    name = project.name
                    description = project.description
                    groupId = project.group
                    artifactId = project.name
                    url = 'https://github.com/apereo/spring-webflow'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'mmoayyed'
                            name = 'Misagh Moayyed'
                            email = 'mm1844@gmail.com'
                        }
                    }
                    scm {
                        connection = 'scm:git@github.com:apereo/spring-webflow.git'
                        developerConnection = 'scm:git@github.com:apereo/spring-webflow.git'
                        url = 'https://github.com/apereo/spring-webflow'
                    }
                }

            }
        }

        if (project.hasProperty("publishReleases")) {
            signing {
                sign publishing.publications
            }
        }

        repositories {
            if (project.hasProperty("publishReleases")) {
                maven {
                    name "Sonatype"
                    url "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                    mavenContent {
                        releasesOnly()
                    }
                    credentials(PasswordCredentials)
                }
            }
            if (project.hasProperty("publishSnapshots")) {
                maven {
                    name "Sonatype"
                    url "https://oss.sonatype.org/content/repositories/snapshots/"
                    mavenContent {
                        snapshotsOnly()
                    }
                    credentials(PasswordCredentials)
                }
            }
        }
    }
}
